// The FLOW
// Statically display blog inputs.
// Hold data via localstorage.

document.addEventListener('DOMContentLoaded', function() {
    const blogList = document.getElementById('blogList'); // Grabbing the div from blog.html where blogs will be displayed

            // Retrieve Blog Posts
    let posts = JSON.parse(localStorage.getItem('blogPosts')) || [];

            // Template Literal
    // "const" declares a constant named renderBlogPost
    // "post" is a parameter for the function that represents a single blog post object that is used in the function.
    // "=>" is an arrow function syntax that is called arrow function used to write function expressions.
    // renderBlogPost: function that generates a formatted HTML block for a single posted blog and takes the blog post object (post) and returns a string of HTML with the blog post data. 
    // Basically: In order to display each blog, the function renderBlogPost will take a post and return it via HTML. This HTML has a div with a class of blog-post. This contains the post's title/username/content. Template literal is used to insert the users post data into its respective field.
    const renderBlogPost = (post) => ` 
    <div class="blog-post">
    <h2>${post.title}</h2>
    <p><strong>By ${post.username}</strong></p>
    <p>${post.content}</p>
    </div>
    `

            // Render each posted Blog
    posts.forEach(post => { // posts is the array containing all the blog posts retrieved from the localstorage.
                            // The user's new post they created was stored in the array named posts over in the form.js file. So now I'm taking the posts array and retrieving them in order to display each blog post on the blog.html page.
        blogList.innerHTML += renderBlogPost(post); // Now that I have each blog post, I use blogList.innerHTML += renderBlogPost(post); to add each post to the blogList div on the page. This line takes the HTML generated by renderBlogPost(post) and adds it to the existing content inside the blogList div.
    });
});